/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectocadmus;

import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import org.mariadb.jdbc.internal.com.read.dao.Results;

import com.sun.corba.se.spi.orbutil.fsm.Guard.Result;
import com.sun.xml.internal.ws.client.dispatch.JAXBDispatch;

import conexion.JDBC;

/**
 *
 * @author renatasanandres
 */
public class CustomerMain extends javax.swing.JFrame {

	/**
	 * Creates new form CustomerMain
	 */

	String id;
	String idFactura;
	boolean facturaCreada = false;

	public CustomerMain() {
		initComponents();
	}

	public void getUserCred(String idicito) {

		id = idicito;
	}

	public void logOut(){
		Customer customer=new Customer();
		customer.setVisible(true);
		this.dispose();
	}

	public void home(){
		Inicio inicio = new Inicio();
		inicio.setVisible(true);
		this.dispose();
	}
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        finder = new javax.swing.JTextField();
        FIND = new javax.swing.JButton();
        finderT = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        quantity = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        checkOut = new javax.swing.JButton();
        home2 = new javax.swing.JButton();
        logOut2 = new javax.swing.JButton();
        tracking = new javax.swing.JButton();
        bgOrder = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        finder.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        getContentPane().add(finder, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, 550, 50));

        FIND.setBackground(new java.awt.Color(255, 255, 255));
        FIND.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lupa.png"))); // NOI18N
        FIND.setBorder(null);
        FIND.setBorderPainted(false);
        FIND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FINDActionPerformed(evt);
                
                System.out.println("Find button pressed");

				if(finder.getText().equals(""))
					retrieveTable1();

				else
					searchRetrieveTable1();

                
            }
        });
        getContentPane().add(FIND, new org.netbeans.lib.awtextra.AbsoluteConstraints(864, 20, 70, 50));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        finderT.setViewportView(jTable1);

        getContentPane().add(finderT, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 900, 520));

        quantity.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityActionPerformed(evt);
            }
        });
        getContentPane().add(quantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 700, 170, 40));

        add.setBackground(new java.awt.Color(255, 255, 255));
        add.setText("CART");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
                
                System.out.println("Add button pressed");

				//Create bill

				conexion.openConection();

				System.out.println("Creating Statement");
				
				String regex = "^\\d*[1-9]\\d*$"; //Positive Integer
				
				if(quantity.getText().matches(regex) && (!quantity.getText().equals(""))) {
				
					if(Integer.parseInt(quantity.getText().toString()) < Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString())) {
					
				try {
					
					if(!facturaCreada) {
					//Create Bill (Incomplete)
					
					conexion.setStmt(conexion.getConn().createStatement());
					ResultSet rs = conexion.getStmt().executeQuery("SELECT idCLIENTE FROM `CLIENTE` WHERE id = " + id + ";");
					System.out.println("SELECT idCLIENTE FROM `CLIENTE` WHERE id = " + id + ";");

					rs.next();

					String idCli = rs.getString("idCLIENTE");

					String iva = "0.12";

					conexion.setStmt(conexion.getConn().createStatement());
					conexion.getStmt().executeQuery("INSERT INTO `FACTURA` (`fechaFac`, iva, `CLIENTE_idCLIENTE`) VALUES (CURDATE(), " + iva + ", " + idCli +");");
					System.out.println("INSERT INTO `FACTURA` (`fechaFac`, iva, `CLIENTE_idCLIENTE`) VALUES (CURDATE(), " + iva + ", " + idCli +");");
					
					conexion.setStmt(conexion.getConn().createStatement());
					rs = conexion.getStmt().executeQuery("SELECT `idFACTURA`  FROM `FACTURA`ORDER BY `idFACTURA` DESC LIMIT 1;");
					System.out.println("SELECT `idFACTURA`  FROM `FACTURA`ORDER BY `idFACTURA` DESC LIMIT 1;");
					rs.next();
					
					idFactura = rs.getString("idFACTURA");
					
					facturaCreada = true;
					
					}
					//Create Details
					
					double subtotal = Double.parseDouble(quantity.getText()) * Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
					
					conexion.setStmt(conexion.getConn().createStatement());
					ResultSet rs = conexion.getStmt().executeQuery("SELECT `idPRODUCTO` FROM `PRODUCTO` WHERE `nombreProducto` = '" + jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() + "';");
					System.out.println("SELECT `idPRODUCTO` FROM `PRODUCTO` WHERE `nombreProducto` = '" + jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() + "';");
					rs.next();
					
					String idProducto = rs.getString("idPRODUCTO");
					
					conexion.setStmt(conexion.getConn().createStatement());
					conexion.getStmt().executeQuery("INSERT INTO `DETALLE` (cantidad, subtotal, `FACTURA_idFACTURA`, `PRODUCTO_idPRODUCTO`) VALUES (" + quantity.getText() + ", " + subtotal +", " + idFactura + ", " + idProducto + ");");
					System.out.println("SELECT idCLIENTE FROM `CLIENTE` WHERE id = " + id + ";");
					
					
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

				conexion.closeConection();

				}
				}
                
            }
        });
        getContentPane().add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 700, 100, 40));

        checkOut.setBackground(new java.awt.Color(255, 255, 255));
        checkOut.setText("CHECK OUT");
        checkOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutActionPerformed(evt);
            

				System.out.println("Checkout button pressed");
				
				String subtotalFac;
				double totalFac;

				try {
					
					conexion.openConection();
					
					conexion.setStmt(conexion.getConn().createStatement());
					ResultSet rs = conexion.getStmt().executeQuery("SELECT SUM(subtotal) AS subtotal FROM `DETALLE` WHERE `FACTURA_idFACTURA` = " + idFactura + ";");
					rs.next();
					subtotalFac = rs.getString("subtotal");
					
					//Falta obtener de la base de datos
					
					totalFac = Double.parseDouble(subtotalFac) * 1.12; 
					
					conexion.setStmt(conexion.getConn().createStatement());
					conexion.getStmt().executeQuery("UPDATE `FACTURA` SET total = " + totalFac + ", subtotal = " + subtotalFac + " WHERE `idFACTURA` = " + idFactura + ";");
					System.out.println("UPDATE `FACTURA` SET total = " + totalFac + ", subtotal = " + subtotalFac + " WHERE `idFACTURA` = " + idFactura + ";");
					
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
				conexion.closeConection();
				
            
            }
        });
        getContentPane().add(checkOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 700, 140, 50));

        home2.setBackground(new java.awt.Color(255, 255, 255));
        home2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home.png"))); // NOI18N
        home2.setToolTipText("");
        home2.setBorder(null);
        home2.setBorderPainted(false);
        home2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home2ActionPerformed(evt);
            }
        });
        getContentPane().add(home2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 20, 50, 50));

        logOut2.setBackground(new java.awt.Color(255, 255, 255));
        logOut2.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        logOut2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logout.png"))); // NOI18N
        logOut2.setText("LOG OUT");
        logOut2.setToolTipText("");
        logOut2.setAlignmentY(0.0F);
        logOut2.setBorder(null);
        logOut2.setBorderPainted(false);
        logOut2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOut2ActionPerformed(evt);
            }
        });
        getContentPane().add(logOut2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 150, 50));

        tracking.setBackground(new java.awt.Color(255, 255, 255));
        tracking.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        tracking.setText("TRACKING");
        tracking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trackingActionPerformed(evt);
            }
        });
        getContentPane().add(tracking, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 710, 160, 50));

        bgOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bg2.jpg"))); // NOI18N
        getContentPane().add(bgOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, -1, 800));

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void retrieveTable1() {

		conexion.openConection();

		System.out.println("Creating Statement");

		try {

			conexion.setStmt(conexion.getConn().createStatement());

			ResultSet rs = conexion.getStmt().executeQuery("SELECT `idPRODUCTO` AS ID, nombreProducto AS Producto, valorUnit AS Precio, cantidadStock AS 'En Stock' FROM `PRODUCTO`;");
			System.out.println("SELECT `idPRODUCTO` AS ID, nombreProducto AS Producto, valorUnit AS Precio, cantidadStock AS 'En Stock' FROM `PRODUCTO`;");
			ResultSetMetaData metaData = rs.getMetaData();

			int numberOfColumns = metaData.getColumnCount();
			Vector<String> columnames = new Vector<String>();

			for(int column = 1 ; column < numberOfColumns ; column++)
				columnames.addElement(metaData.getColumnLabel(column + 1));

			Vector<Object> rows = new Vector<Object>();

			while(rs.next()) {

				Vector<String> newRow = new Vector<String>();

				for(int i = 2 ; i <= numberOfColumns; i++)
					newRow.addElement(rs.getString(i));

				rows.addElement(newRow);

			}

			jTable1.setModel(new DefaultTableModel(rows, columnames));


		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		conexion.closeConection();


	}

	private void searchRetrieveTable1() {

		conexion.openConection();

		System.out.println("Creating Statement");

		try {

			conexion.setStmt(conexion.getConn().createStatement());

			ResultSet rs = conexion.getStmt().executeQuery("SELECT `idPRODUCTO` AS ID, nombreProducto AS Producto, valorUnit AS Precio, cantidadStock AS 'En Stock' FROM `PRODUCTO` WHERE `nombreProducto` LIKE '" + finder.getText() + "%';");
			System.out.println("SELECT `idPRODUCTO` AS ID, nombreProducto AS Producto, valorUnit AS Precio, cantidadStock AS 'En Stock' FROM `PRODUCTO` WHERE `nombreProducto` = '" + finder.getText() + "';");
			ResultSetMetaData metaData = rs.getMetaData();

			int numberOfColumns = metaData.getColumnCount();
			Vector<String> columnames = new Vector<String>();

			for(int column = 1 ; column < numberOfColumns ; column++)
				columnames.addElement(metaData.getColumnLabel(column + 1));

			Vector<Object> rows = new Vector<Object>();

			while(rs.next()) {

				Vector<String> newRow = new Vector<String>();

				for(int i = 2 ; i <= numberOfColumns; i++)
					newRow.addElement(rs.getString(i));

				rows.addElement(newRow);

			}

			jTable1.setModel(new DefaultTableModel(rows, columnames));


		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		conexion.closeConection();


	}

	private void checkOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutActionPerformed
		Bill bill = new Bill(idFactura);
		System.out.println("idFactura es: " + idFactura);
		
		bill.setVisible(true);
		this.dispose();
	}//GEN-LAST:event_checkOutActionPerformed

	private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_addActionPerformed

	private void FINDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FINDActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_FINDActionPerformed

	private void quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_quantityActionPerformed

	private void home2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home2ActionPerformed
		home();
	}//GEN-LAST:event_home2ActionPerformed

	private void logOut2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOut2ActionPerformed
		logOut();
	}//GEN-LAST:event_logOut2ActionPerformed

    private void trackingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trackingActionPerformed
        Tracking tracking = new Tracking(id);
        tracking.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_trackingActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(CustomerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(CustomerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(CustomerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(CustomerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new CustomerMain().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton FIND;
	private javax.swing.JButton add;
	private javax.swing.JLabel bgOrder;
	private javax.swing.JButton checkOut;
	private javax.swing.JTextField finder;
	private javax.swing.JScrollPane finderT;
	private javax.swing.JButton home2;
	private javax.swing.JTable jTable1;
	private javax.swing.JButton logOut2;
	private javax.swing.JTextField quantity;
	private javax.swing.JButton tracking;

	private JDBC conexion = new JDBC();
	
	
	// End of variables declaration//GEN-END:variables
}
