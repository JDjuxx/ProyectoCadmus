/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectocadmus;

import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import com.sun.xml.internal.ws.client.dispatch.JAXBDispatch;

import conexion.JDBC;

/**
 *
 * @author renatasanandres
 */
public class CustomerMain extends javax.swing.JFrame {

    /**
     * Creates new form CustomerMain
     */

	String id;
	
	public CustomerMain() {
        initComponents();
        
    }
    
    public void getUserCred(String idicito) {
    	
    	id = idicito;
    	JOptionPane.showMessageDialog(null, id);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        finder = new javax.swing.JTextField();
        FIND = new javax.swing.JButton();
        finderT = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        quantity = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        checkOut = new javax.swing.JButton();
        bgOrder = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        finder.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        getContentPane().add(finder, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, 550, 50));

        FIND.setBackground(new java.awt.Color(255, 255, 255));
        FIND.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lupa.png"))); // NOI18N
        FIND.setBorder(null);
        FIND.setBorderPainted(false);
        FIND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FINDActionPerformed(evt);
                
                System.out.println("Find button pressed");
                
                if(finder.getText().equals(""))
                	retrieveTable1();
                
                else
                	searchRetrieveTable1();
                
                
            }
        });
        getContentPane().add(FIND, new org.netbeans.lib.awtextra.AbsoluteConstraints(864, 20, 70, 50));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        finderT.setViewportView(jTable1);

        getContentPane().add(finderT, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 900, 520));

        quantity.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityActionPerformed(evt);
            }
        });
        getContentPane().add(quantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 700, 170, 40));

        add.setBackground(new java.awt.Color(255, 255, 255));
        add.setText("CART");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
                
                System.out.println("Add button pressed");
                
                //Create bill
                
                conexion.openConection();

        		System.out.println("Creating Statement");

 
        			try {
					
        				String iva = "0.12";
        				
        				Customer id = new Customer();
        				
        				conexion.setStmt(conexion.getConn().createStatement());
        				conexion.getStmt().executeQuery("INSERT INTO `FACTURA` (`fechaFac`, iva, `CLIENTE_idCLIENTE`) VALUES (CURDATE(), " + iva + ", " + id.id +");");
	        			System.out.println("INSERT INTO `FACTURA` (`fechaFac`, iva, `CLIENTE_idCLIENTE`) VALUES (CURDATE(), " + iva + ", " + id.id +");");
					
        			} catch (SQLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

        			conexion.closeConection();
                
                
            }
        });
        getContentPane().add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 700, 100, 40));

        checkOut.setBackground(new java.awt.Color(255, 255, 255));
        checkOut.setText("CHECK OUT");
        checkOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutActionPerformed(evt);
            }
        });
        getContentPane().add(checkOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 700, 140, 50));

        bgOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bg2.jpg"))); // NOI18N
        getContentPane().add(bgOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, -1, 800));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
	private void retrieveTable1() {

		conexion.openConection();

		System.out.println("Creating Statement");

		try {

			conexion.setStmt(conexion.getConn().createStatement());

			ResultSet rs = conexion.getStmt().executeQuery("SELECT `idPRODUCTO` AS ID, nombreProducto AS Producto, valorUnit AS Precio, cantidadStock AS 'En Stock' FROM `PRODUCTO`;");
			System.out.println("SELECT `idPRODUCTO` AS ID, nombreProducto AS Producto, valorUnit AS Precio, cantidadStock AS 'En Stock' FROM `PRODUCTO`;");
			ResultSetMetaData metaData = rs.getMetaData();

			int numberOfColumns = metaData.getColumnCount();
			Vector<String> columnames = new Vector<String>();

			for(int column = 1 ; column < numberOfColumns ; column++)
				columnames.addElement(metaData.getColumnLabel(column + 1));

			Vector<Object> rows = new Vector<Object>();

			while(rs.next()) {

				Vector<String> newRow = new Vector<String>();

				for(int i = 2 ; i <= numberOfColumns; i++)
					newRow.addElement(rs.getString(i));

				rows.addElement(newRow);

			}

			jTable1.setModel(new DefaultTableModel(rows, columnames));


		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		conexion.closeConection();


	}
	
	private void searchRetrieveTable1() {

		conexion.openConection();

		System.out.println("Creating Statement");

		try {

			conexion.setStmt(conexion.getConn().createStatement());

			ResultSet rs = conexion.getStmt().executeQuery("SELECT `idPRODUCTO` AS ID, nombreProducto AS Producto, valorUnit AS Precio, cantidadStock AS 'En Stock' FROM `PRODUCTO` WHERE `nombreProducto` LIKE '" + finder.getText() + "%';");
			System.out.println("SELECT `idPRODUCTO` AS ID, nombreProducto AS Producto, valorUnit AS Precio, cantidadStock AS 'En Stock' FROM `PRODUCTO` WHERE `nombreProducto` = '" + finder.getText() + "';");
			ResultSetMetaData metaData = rs.getMetaData();

			int numberOfColumns = metaData.getColumnCount();
			Vector<String> columnames = new Vector<String>();

			for(int column = 1 ; column < numberOfColumns ; column++)
				columnames.addElement(metaData.getColumnLabel(column + 1));

			Vector<Object> rows = new Vector<Object>();

			while(rs.next()) {

				Vector<String> newRow = new Vector<String>();

				for(int i = 2 ; i <= numberOfColumns; i++)
					newRow.addElement(rs.getString(i));

				rows.addElement(newRow);

			}

			jTable1.setModel(new DefaultTableModel(rows, columnames));


		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		conexion.closeConection();


	}

    private void checkOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutActionPerformed
        Bill bill = new Bill();
        
        bill.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_checkOutActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addActionPerformed

    private void FINDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FINDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FINDActionPerformed

    private void quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FIND;
    private javax.swing.JButton add;
    private javax.swing.JLabel bgOrder;
    private javax.swing.JButton checkOut;
    private javax.swing.JTextField finder;
    private javax.swing.JScrollPane finderT;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField quantity;
    
    private JDBC conexion = new JDBC();
    // End of variables declaration//GEN-END:variables
}
